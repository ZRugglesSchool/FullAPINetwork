version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - myNetwork
  
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_NAME_INSIDE_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_NAME_PLAINTEXT_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - myNetwork
    depends_on:
      - zookeeper

  kafka-exporter:
    image: danielqsj/kafka-exporter
    container_name: kafka-exporter
    ports:
      - "9308:9308"
    environment:
      - KAFKA_SERVER=kafka:9092
    networks:
      - myNetwork
    depends_on:
      - kafka

  api1:
    build: ./nextjs-api
    container_name: api1
    expose:
      - "3000"
    networks:
      - myNetwork
    environment:
      - MONGO_URI=mongodb://mongo:27017/gameAPI
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - mongo
      - kafka

  api2:
    build: ./nextjs-api
    container_name: api2
    expose:
      - "3000"
    networks:
      - myNetwork
    environment:
      - MONGO_URI=mongodb://mongo:27017/gameAPI
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - mongo
      - kafka

  email-service:
    build: ./email-service
    container_name: email-service
    networks:
      - myNetwork
    environment:
      - MONGO_URI=mongodb://mongo:27017/gameAPI
      - KAFKA_BROKER=kafka:9092
      - ETHEREAL_USER=kim.collins@ethereal.email
      - ETHEREAL_PASS=gQZnGXn7ag57995Cx5
    depends_on:
      - mongo
      - kafka

  mongo:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - myNetwork

  mongo-exporter:
    image: bitnami/mongodb-exporter:latest
    container_name: mongo-exporter
    ports:
      - "9216:9216"
    networks:
      - myNetwork
    depends_on:
      - mongo
    environment:
      - MONGODB_URI=mongodb://mongo:27017

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api1
      - api2
    networks:
      - myNetwork

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    command:
      - "-nginx.scrape-uri=http://nginx/nginx_status"
    ports:
      - "9113:9113"
    networks:
      - myNetwork
    depends_on:
      - nginx


  prometheus:
    build: ./prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    networks:
      - myNetwork

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    networks:
      - myNetwork
    depends_on:
      - prometheus

networks:
  myNetwork:
    driver: bridge